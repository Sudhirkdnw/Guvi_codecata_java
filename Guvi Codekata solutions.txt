Q1:

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        int d = sc.nextInt();
        
        //..... YOUR CODE STARTS HERE .....
        
         int result1 = (a + b) * c;             
        int result2 = (b - d) / a;             
        int result3 = (a * d) + c;             
        int result4 = (a + b + c + d) / 2;
        
        System.out.println("Result of operation 1: " + result1);
        System.out.println("Result of operation 2: " + result2);
        System.out.println("Result of operation 3: " + result3);
        System.out.println("Result of operation 4: " + result4);
        
        sc.close();
        
        //..... YOUR CODE ENDS HERE .....
    }
}



Q2:

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        float f1 = sc.nextFloat();
        float f2 = sc.nextFloat();
        
        int n1 = (int) f1;
        int n2 = (int) f2;
        
        //..... YOUR CODE STARTS HERE .....
        
        int andResult = n1 & n2;
        int orResult = n1 | n2;
        int xorResult = n1 ^ n2;
        int notAndResult = (~n1) & n2;
        
        // Printing the results in the specified format
        System.out.println("Bitwise AND result: " + andResult);
        System.out.println("Bitwise OR result: " + orResult);
        System.out.println("Bitwise XOR result: " + xorResult);
        System.out.println("Bitwise NOT and AND result: " + notAndResult);
        
        sc.close();
        
        //..... YOUR CODE ENDS HERE .....
    }
}

Q3:

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Input
        int a = scanner.nextInt();
        int b = scanner.nextInt();
        int c = scanner.nextInt();
        // Transformations
        //..... YOUR CODE STARTS HERE .....
        
        if (a % 2 == 0) {  
            a += b;
        }
        
        if (b % 2 != 0) {  
            c *= 2;
        }
        
        if (c % 3 == 0) { 
            c += a;
        }
        
        if ((a + b + c) > 100) {  
            a -= 100;
            b -= 100;
            c -= 100;
        }
        //..... YOUR CODE ENDS HERE .....
        // Output
        System.out.println("a: " + a + ", b: " + b + ", c: " + c);
    }
}

Q4:

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
            //..... YOUR CODE STARTS HERE .....
            
            int oddSum = 0;
        int evenSum = 0;
        int n = scanner.nextInt();
        for (int i = 0; i < n; i++) {
            int num = scanner.nextInt();
            
            if (num == -1) {  
                break;
            }
            
            if (num % 2 == 0) {  
                evenSum += num;
            } else {  
                oddSum += num;
            }
        }
        
        if (oddSum > evenSum) {
            System.out.println("Odd Sum Greater");
        } else if (evenSum > oddSum) {
            System.out.println("Even Sum Greater");
        } else {
            System.out.println("Equal");
        }
        
        scanner.close();
            
            //..... YOUR CODE ENDS HERE .....
    }
}


Q5:

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        //..... YOUR CODE STARTS HERE .....
        

        int n = scanner.nextInt();
        for (int i = 0; i < n; i++) {
            int score = scanner.nextInt();
            if (score == -1) {
                break;
            }

            if (score >= 90 && score <= 100) {
                System.out.println("Excellent");
            } else if (score >= 75 && score <= 89) {
                System.out.println("Good");
            } else if (score >= 50 && score <= 74) {
                System.out.println("Average");
            } else if (score >= 35 && score <= 49) {
                System.out.println("Pass");
            } else if (score >= 0 && score <= 34) {
                System.out.println("Fail");
            } else {
                System.out.println("Invalid score");
            }
        }
        
        //..... YOUR CODE ENDS HERE .....
        scanner.close();
    }
}

Q6:


import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
         //..... YOUR CODE STARTS HERE .....
        
        while (true) {
            int month = scanner.nextInt();
            int year = scanner.nextInt();
            
            if (month == -1 && year == -1) {
                break;
            }
            
            if (month < 1 || month > 12) {
                System.out.println("Invalid month");
                continue;
            }
            
            int daysInMonth;
            switch (month) {
                case 1: case 3: case 5: case 7: case 8: case 10: case 12:
                    daysInMonth = 31;
                    break;
                case 4: case 6: case 9: case 11:
                    daysInMonth = 30;
                    break;
                case 2:
                    if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
                        daysInMonth = 29;
                    } else {
                        daysInMonth = 28;
                    }
                    break;
                default:
                    daysInMonth = 0; 
            }
            System.out.println(daysInMonth);
        }
        
        //..... YOUR CODE ENDS HERE .....
        
        scanner.close();
    }
}


Q7:


import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        //..... YOUR CODE STARTS HERE .....
        
        Scanner scanner = new Scanner(System.in);
        
        int registeredVoters = scanner.nextInt();
        int candidates = scanner.nextInt();
        int votes = scanner.nextInt();
        
        if (votes > registeredVoters) {
            System.out.println("INVALID");
            return;
        }
        
        for (int i = 0; i < votes; i++) {
            int candidateID = scanner.nextInt();
            if (candidateID >= 1 && candidateID <= candidates) {
                System.out.println("VALID");
            } else {
                System.out.println("INVALID");
            }
        }
        
        //..... YOUR CODE ENDS HERE .....
    }
}


Q8:

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        //..... YOUR CODE STARTS HERE .....
        
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();
        
        for (int i = 1; i <= N; i++) {
            if (i % 2 == 1) {
                for (int j = 0; j < i; j++) {
                    System.out.print("*");
                }
            } else {
                
                for (int j = 0; j < i; j++) {
                    System.out.print("#");
                }
            }
            System.out.println();
        }
        sc.close();
        
        //..... YOUR CODE ENDS HERE .....
    }
}


Q9:


import java.util.Scanner;

class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String make = scanner.next();
        String model = scanner.next();
        int year = scanner.nextInt();
        int currentYear = scanner.nextInt();

        Car car = new Car(make, model, year);
        int age = car.getCarAge(currentYear);

        if (age != -1) {
            System.out.println(age);
        }
    }
}

class Car {
    //..... YOUR CODE STARTS HERE .....
    
    private String make;
    private String model;
    private int year;
    public Car(String make, String model, int year) {
        this.make = make;
        this.model = model;
        this.year = year;
    }
    public int getCarAge(int currentYear) {
        if (year > currentYear) {
            return -1;  
        } else {
            return currentYear - year; 
        }
    }
    
    //..... YOUR CODE ENDS HERE .....
}


Q10:

import java.util.Scanner;

interface Shape {
    double area();
    double perimeter();
}

class Rectangle implements Shape {
   //..... YOUR CODE STARTS HERE .....
   
   private double length;
    private double width;
    public Rectangle(double length, double width) {
        this.length = length;
        this.width = width;
    }
    public double area() {
        return length * width;
    }

    @Override
    public double perimeter() {
        return 2 * (length + width);
    }
   
   //..... YOUR CODE ENDS HERE .....
}

class Circle implements Shape {
   //..... YOUR CODE STARTS HERE .....
   
   private double radius;
    public Circle(double radius) {
        this.radius = radius;
    }
    @Override
    public double area() {
        return Math.PI * radius * radius;
    }

    @Override
    public double perimeter() {
        return 2 * Math.PI * radius;
    }
   
   //..... YOUR CODE ENDS HERE .....
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String shapeType = scanner.next();
        Shape shape;

        if (shapeType.equals("Rectangle")) {
            double length = scanner.nextDouble();
            double width = scanner.nextDouble();
            shape = new Rectangle(length, width);
        } else if (shapeType.equals("Circle")) {
            double radius = scanner.nextDouble();
            shape = new Circle(radius);
        } else {
            System.out.println("Invalid shape type");
            return;
        }

        System.out.println("Area: " + shape.area());
        System.out.println("Perimeter: " + shape.perimeter());
    }
}


Q11:

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String name = scanner.next();
        int age = scanner.nextInt();

        Person person = new Person();
        person.setName(name);
        person.setAge(age);

        if (age > 0) {
            System.out.println("Name: " + person.getName());
            System.out.println("Age: " + person.getAge());
        }
    }
}

class Person {
    //..... YOUR CODE STARTS HERE .....
    
    private String name;
    private int age;
    
    public void setName(String name) {
        this.name = name;
    }

    public void setAge(int age) {
        if (age > 0) {
            this.age = age;
        } else {
            System.out.println("Invalid age");
        }
    }

    public String getName() {
        return this.name;
    }

    public int getAge() {
        return this.age;
    }
    
    //..... YOUR CODE ENDS HERE .....
}



Q12:

import java.util.Scanner;

interface Employee {
    double calculateSalary();
    String getDetails();
}

class FullTimeEmployee implements Employee {
   //..... YOUR CODE STARTS HERE .....
   
   private String name;
    private double monthlySalary;

    public FullTimeEmployee(String name, double monthlySalary) {
        this.name = name;
        this.monthlySalary = monthlySalary;
    }
    @Override
    public double calculateSalary() {
        return monthlySalary;
    }

    @Override
    public String getDetails() {
        return "Name: " + name + ", Salary: " + calculateSalary();
    }
   
   //..... YOUR CODE ENDS HERE .....
}

class PartTimeEmployee implements Employee {
   //..... YOUR CODE STARTS HERE .....
   
   private String name;
    private double hourlyRate;
    private int hoursWorked;

    public PartTimeEmployee(String name, double hourlyRate, int hoursWorked) {
        this.name = name;
        this.hourlyRate = hourlyRate;
        this.hoursWorked = hoursWorked;
    }

    @Override
    public double calculateSalary() {
        return hourlyRate * hoursWorked;
    }

    @Override
    public String getDetails() {
        return "Name: " + name + ", Salary: " + calculateSalary();
    }
   
   //..... YOUR CODE ENDS HERE .....
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        String employeeType = scanner.next();
        Employee employee;

        if (employeeType.equals("FullTimeEmployee")) {
            String name = scanner.next();
            double monthlySalary = scanner.nextDouble();
            employee = new FullTimeEmployee(name, monthlySalary);
        } else if (employeeType.equals("PartTimeEmployee")) {
            String name = scanner.next();
            double hourlyRate = scanner.nextDouble();
            int hoursWorked = scanner.nextInt();
            employee = new PartTimeEmployee(name, hourlyRate, hoursWorked);
        } else {
            System.out.println("Invalid employee type");
            return;
        }

        System.out.println(employee.getDetails());
    }
}